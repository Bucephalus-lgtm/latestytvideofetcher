{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport schedule from 'node-schedule';\nimport { request } from 'graphql-request';\n\nconst predefinedQueries = ['cricket', 'football', 'India', 'Modi', 'BJP', 'Ram Mandir'];\nconst random = (mn, mx) => Math.floor(Math.random() * (mx - mn) + mn);\nconst getRandom = (arr) => arr[random(0, arr.length - 1)];\nconst apiKeys = ['AIzaSyBKXPOi2MNRfAaxn1Usm2pmE_RylZPRifE', 'AIzaSyBT98USDtFiJI66SqOj7qyRK2OF4YO44EM'];\n\nconst populateDB = async () => {\n  try{\n    const now = new Date().toISOString();\n  const { data } = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?q=${getRandom(predefinedQueries)}&part=snippet&maxResults=10&order=date&publishedAfter=${now}&key=${getRandom(apiKeys)}`);\n\n  if (data?.items.length > 0) {\n    data?.items.map(async d => {\n      let description:string = d?.snippet?.description.replace(/'/g, \"\u2032\");\n      description = description.replace(/^\"|\"/g, \"\u2032\");\n\n      await request('https://ytvideofetcherserver.bhargabnath.repl.co/', `\n        mutation {\n          addVideo(videoNew:{\n            videoId: \"${d?.id?.videoId}\",\n            title: \"${d?.snippet?.title ? d?.snippet?.title : 'no title'}\",\n            description: \"${description}\",\n            channelId: \"${d?.snippet?.channelId}\",\n            channelTitle: \"${d?.snippet?.channelTitle}\",\n            thumbnailUrl: \"${d?.snippet?.thumbnails?.high?.url ? d?.snippet?.thumbnails?.high?.url : 'https://i.ytimg.com/vi/9h0ROL1mqAI/hqdefault.jpg'}\",\n            publishedDateTime: \"${d?.snippet?.publishedAt ? d?.snippet?.publishedAt: 'blank'}\",\n            created: \"${d?.snippet?.publishTime ? d?.snippet?.publishTime : 'blank'}\"\n          }) {\n            id\n          }\n        }`)\n    });\n  }\n  } catch(err) {\n    if (err instanceof Error) {\n      console.error(err.message);\n    } else {\n      console.error(err);\n    }\n    setTimeout(populateDB, 1000);\n  }\n}\n\nschedule.scheduleJob(\"*/10 * * * * *\", async () => {\n  console.log('fetching youtube data every 10 seconds...');\n  await populateDB();\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AAClB,2BAAqB;AACrB,6BAAwB;AAExB,MAAM,oBAAoB,CAAC,WAAW,YAAY,SAAS,QAAQ,OAAO,YAAY;AACtF,MAAM,SAAS,CAAC,IAAI,OAAO,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,MAAM,EAAE;AACpE,MAAM,YAAY,CAAC,QAAQ,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC;AACvD,MAAM,UAAU,CAAC,2CAA2C,yCAAyC;AAErG,MAAM,aAAa,YAAY;AAC7B,MAAG;AACD,UAAM,MAAM,IAAI,KAAK,EAAE,YAAY;AACrC,UAAM,EAAE,KAAK,IAAI,MAAM,aAAAA,QAAM,IAAI,sDAAsD,UAAU,iBAAiB,0DAA0D,WAAW,UAAU,OAAO,GAAG;AAE3M,SAAI,6BAAM,MAAM,UAAS,GAAG;AAC1B,mCAAM,MAAM,IAAI,OAAM,MAAK;AAf/B;AAgBM,YAAI,eAAqB,4BAAG,YAAH,mBAAY,YAAY,QAAQ,MAAM;AAC/D,sBAAc,YAAY,QAAQ,SAAS,QAAG;AAE9C,kBAAM,gCAAQ,qDAAqD;AAAA;AAAA;AAAA,yBAGjD,4BAAG,OAAH,mBAAO;AAAA,wBACT,4BAAG,YAAH,mBAAY,UAAQ,4BAAG,YAAH,mBAAY,QAAQ;AAAA,4BAClC;AAAA,2BACF,4BAAG,YAAH,mBAAY;AAAA,8BACT,4BAAG,YAAH,mBAAY;AAAA,+BACZ,wCAAG,YAAH,mBAAY,eAAZ,mBAAwB,SAAxB,mBAA8B,QAAM,wCAAG,YAAH,mBAAY,eAAZ,mBAAwB,SAAxB,mBAA8B,MAAM;AAAA,oCACnE,4BAAG,YAAH,mBAAY,gBAAc,4BAAG,YAAH,mBAAY,cAAa;AAAA,0BAC7D,4BAAG,YAAH,mBAAY,gBAAc,4BAAG,YAAH,mBAAY,cAAc;AAAA;AAAA;AAAA;AAAA,UAIlE;AAAA,MACN;AAAA,IACF;AAAA,EACA,SAAQ,KAAN;AACA,QAAI,eAAe,OAAO;AACxB,cAAQ,MAAM,IAAI,OAAO;AAAA,IAC3B,OAAO;AACL,cAAQ,MAAM,GAAG;AAAA,IACnB;AACA,eAAW,YAAY,GAAI;AAAA,EAC7B;AACF;AAEA,qBAAAC,QAAS,YAAY,kBAAkB,YAAY;AACjD,UAAQ,IAAI,2CAA2C;AACvD,QAAM,WAAW;AACnB,CAAC;",
  "names": ["axios", "schedule"]
}
